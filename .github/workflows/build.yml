name: Build and Notify

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate pip list
        run: |
          pip list > ryzenai_pip_list.txt

      - name: Output pip list
        run: |
          echo "Contents of ryzenai_pip_list.txt:"
          cat ryzenai_pip_list.txt || { echo "Failed to read ryzenai_pip_list.txt"; exit 1; }

      - name: Extract required packages with formatting
        id: extract-notifications
        run: |
          echo "Running grep to filter packages and format output..."
          grep -E '^(aianalyzer|device-essentials-phx|device-essentials-strx|flexml|flexml-metadata|microkernel-tiling|onnxruntime-vitisai|ryzen-ai|torch|torch-mlir|torchvision|vai-q-onnx|vaiml|vaitrace|vitis-aie-essentials|vitis_mllib|voe)' ryzenai_pip_list.txt | sed 's/^/    /; s/$/\n/' > notifications.txt
          
          # Capture the formatted notifications into a variable
          notifications=$(cat notifications.txt | sed 's/"/\\"/g')
          echo "Captured notifications: $notifications"
          
          # Create a file to store notifications
          echo "$notifications" > notifications.txt

      - name: Notify Teams
        uses: ./.github/actions/notify_teams
        with:
          overall-status: ${{ job.status }} # Capturing the overall status of the build job
          run-url: ${{ github.run_url }}
          action-name: Build
          workflow-status: ${{ job.status }} # Status of the workflow
          workflow-name: ${{ github.workflow }}
          version-info: |
            $(cat notifications.txt | sed 's/^/â€¢ /')  # Prepend bullet points for better formatting
