name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Echo building
        run: echo "Building..."

  notify:
    needs: build  # This job will wait for 'build' to finish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code  # Ensures the repository is checked out so the local action can be found
        uses: actions/checkout@v3

      - name: Capture build status
        id: capture-status
        run: |
          if [ "${{ needs.build.result }}" == "success" ]; then
            echo "status=success" >> $GITHUB_ENV
          else
            echo "status=failure" >> $GITHUB_ENV
          fi

      - name: Generate Notifications
        id: generate-notifications
        run: |
          # Generate the notifications from the pip list
          grep -E '^(aianalyzer|device-essentials-phx|device-essentials-strx|flexml|flexml-metadata|microkernel-tiling|onnxruntime-vitisai|ryzen-ai|torch|torch-mlir|torchvision|vai-q-onnx|vaiml|vaitrace|vitis-aie-essentials|vitis_mllib|voe)' ryzenai_pip_list.txt > notifications.txt

          # Read the contents of notifications.txt and format it for the environment variable
          notifications=$(<notifications.txt)
          
          # Escape double quotes and set the notifications variable
          notifications="${notifications//\"/\\\"}"  # Escape double quotes
          echo "notifications=${notifications}" >> $GITHUB_ENV  # Use a single line format for the environment variable

      - name: Notify Teams with build status
        uses: ./.github/actions/notify_teams  # Points to the local composite action
        with:
          overall-status: ${{ env.status }}
          run-url: ${{ github.run_url }}  # Ensure this is passed correctly
          action-name: ${{ job.name }}  # Use the job name dynamically
          workflow-status: ${{ env.status }}
          workflow-name: ${{ github.workflow }}
          version-info: ${{ env.notifications }}  # Pass the version info to the notification
